

The Chipmunk System 
-------------------

The Chipmunk system is a collection of software tools for Unix
systems and OS/2. The easiest way to learn about what the
Chipmunk system is, how to install it, and how to use it, is
to FTP the file in this directory that starts with "webdoc"
(most probably webdoc1.3.tar.gz), gunzip and untar it, cd
into the webdoc directory, and point your favorite Web 
browser (Mosiac, Netscape, Microsoft Explorer, and Lynx are 
examples of Web browsers) at the file 

index.html

This is the home page for Chipmunk, and will guide you through
the process of deciding what if any Chipmunk tools are useful
for you, and how install and use them.

If you don't have access to a Web browser, read on ...

-------------------------------------

Chipmunk System Details 
-----------------------

The software tools in the Chipmunk system perform a wide variety
of tasks: electronic circuit simulation and schematic capture,
graphics editing, and curve plotting, to name a few. The core tools
began their life as the applications software for three clusters of
Hewlett-Packard 9836C computers (and other compatible models)
that were donated to the California Institute of Technology in the
early- and mid- 1980's. One cluster, of about 25 workstations,
served as computing tools for undergraduate and graduate
Computer Science courses. A second cluster, of about 10
workstations, served as data acquisition and analysis tools for
laboratory courses in integrated circuits: each workstation was
attached to donated HPIB test instruments. A third cluster served
the laboratory of Carver Mead . 

Throughout the decade of the 80's, Caltech undergraduate and
graduate students wrote a variety of software tools to run on these
three clusters of machines: software to teach classes, do research,
and prepare documents. When the 80's ended, and Unix
workstations began to dominate research computing, the best tools
were ported to run under HPUX running on HP 68030-based
workstations running the X window system, and later to a wide 
assortment of hardware and software environments.

Here is a brief description of each of the Chipmunk tools.

Log 
   Log is a graphical environment for entering circuit
   schematics, and for analog and digital circuit simulation. 
View 
   View is a tool for manipulating and plotting data. 
Until 
   Until is a graphics editor. 
Wol 
   Wol is a tool for creating integrated circuit layout. 

In addition to these major tools, many supplementary tools are part
of the Chipmunk system. In addition, the project of porting the
Chipmunk tools spawned a Pascal-to-C converter, p2c. The GNU
Foundation distributes p2c -- it is not part of the Chipmunk
package. 

The Log System 
--------------

Log is a circuit schematic capture tool and simulation environment,
written by Dave Gillespie. Highlights of the Log system include: 

Schematic capture 
   Log supports schematic entry for documentation,
   simulation, and netlist creation. Schematic printouts can be
   previewed on-screen, and encapsulated Postscript and
   HPGL output file formats are supported. In addition, the
   input file format for the Chipmunk graphics editor Until is
   supported. 

Netlist generation 
   Log can generate SPICE netlists for circuit schematics; Log
   can also generate NTK format netlists, also generated by the
   Chipmunk VLSI layout tool Wol . Log supports hierarchial
   netlist generation. Using Log, Wol, and Netcmp (a netlist
   comparison tool included in the Chipmunk supplementary 
   toolkit), 50,000 transistor IC designs have been verified for
   layout-vs-schematic netlist equality. Alternatively, IC
   designers can use Log to generate SPICE schematics, to
   support netlist verification of layout generated with Magic;
   Gemini is often used as the netlist comparison tool in this
   situation. Freely redistributable tools are now available for
   generating Xilinx XNF format netlists from Log netlist outputs

Simulation data visualization 
   Log includes a simulator-independent service for
   graphically viewing and measuring simulation data,
   supporting an arbitrary number of traces. The service
   generates output data suitable for input to the commercial
   tool MATLAB, and to the Chipmunk data plotting tool 
   View . In addition, a simple plotting tool is integrated into
   the data visualization system, supporting Postscript and
   HPGL formats, and the file format for the Chipmunk
   graphics editor Until .

Analog circuit simulation 
   Log includes a full-featured analog circuit simulation
   package, Analog, written by John Lazzaro. Circuit schematic
   editing and parameter adjustments can occur while the
   simulator is in operation, supporting the metaphor of a
   virtual lab workbench. Model components include MOS
   transistor models optimized for accurate simulation in the
   weak-inversion regime, and macromodels of several of the
   circuits featured in Carver Mead's book Analog VLSI and
   Neural Systems. Circuits of 64 nodes or less can be
   reasonably simulated in analog; hierarchial simulation is not
   presently supported. 

Digital circuit simulation 
   Log includes a unit-time-delay digital circuit simulation
   package, Diglog, written by Dave Gillespie. Circuit
   schematic editing and parameter adjustments can occur
   while the simulator is in operation, supporting the metaphor
   of a virtual lab workbench. Circuit libraries include many
   7400-series TTL parts, and hard macros for early Actel
   FPGAs. Hierarchial simulation is supported. Log is
   currently suggested for simulation of systems with a few
   hundred gates; an outstanding bug often results in corrupted
   schematics during digital simulation for designs
   significantly larger. 

Custom gate creation 
   The log package includes a standalone gate editor, Loged, 
   for creating custom gate icons. The simulation code for
   simple digital gates can be embedded during gate
   description using loged; complex digital gates and
   simulation code for analog circuits requires separate C code.
   Loged can also generate data-sheets showing gate symbols
   and attributed, the the Postscript format. 

Log is the most popular Chipmunk tool, and has founded many uses
in academia and industry. Log can serve as a cost-free alternative to
commercial tools like ViewLogic, for users with simple needs.
Integrated circuit designers use it as an inexpensive tools for netlist
creation; educators use it for introductory digital logic courses;
weak-inversion MOS circuit designs use it to simulate small
circuits. 

View 
----

View is a data manipulation and plotting tool written by Dave
Gillespie. View is primarily useful for processing and displaying
large collections of one-dimensional data curves. Volume and
surface visualizations are not supported. Programs in View
language can be interactively entered at a shell prompt, or
interpreted as batch files. Features of View include:


Data manipulation 
   View language supports math operations on curves as
   basic operations, as well as scalar math operations and
   vector-to-scalar reduction operations. Other operations
   allow the extraction and insertion of scalars into vectors.
   Many math functions (trigonometric, hyperbolic, and
   rounding) are included. Symbolic functions can be
   evaluated over ranges specified by curves, supporting the
   comparison of experimental data with theory. View
   supports automatic curve fitting for arbitrary non-linear
   functions. 
Data plotting 
   Auto-scaling plotting of data curves is supported,
   included dual Y axis scales, broken line variants, and
   symbol plotting. Plots can be interactively previewed.
   Postscript, HPGL, and the file format for the Chipmunk
   graphics editor Until are supported. 
Libraries 
   Libraries written in View language support error bar
   generation, histogram generation, numerical integration,
   zero-crossing detection, and data smoothing. 
Compatability 
   View accepts data file input from the Log data
   visualization system, supporting data analysis and plotting
   of simulation data from Log simulators (Analog and
   Diglog). 
Instrument Control 
   View includes an HPIB instrument control library, Mt ,
   and drivers for several HP and Keithly instruments.
   Another HPIB package included with view interfaces
   directly to a Tektronics 2430 scope. These programs were
   used under Unix in a Sun Sparc environment to interface
   to instruments using an IOTech HPIB card; rewriting the
   low-level interface for a different hardware environment
   should be feasible. 

Users not requiring the power of a commercial data plotting and
manipulation tool such as MATLAB sometimes find View a
cost-free alternative; Log users sometimes find View to be an
effective post-processing tool for simulation results. These two
classes of users make up the current View userbase. 

Until 
-----

Until is a graphics editor written by Glen Gribble, incorporating
code from an earlier graphics editor written by John Wawryznek
and Telle Witney. The primary purpose of the tool is to generate
publication-quality graphics: all of the figures in Carver Mead's
book Analog VLSI and Neural Systems were drawn in Until, and
imported into LaTex. Features of Until include: 

Many drawing modes 
   Bezier curves, circles, ellipses, polygons, arrows, and
   several types of boxes can all be drawn with Until.
   Control points for Bezier curves can be viewed and
   directly altered. Mixed hierarchy is supported: instances of
   figures and primitive elements can be mixed on a page.
   Instances can be rotated, scaled, and flattened as needed.
   Text is supported with many fonts. 
Input compatibility 
   Until accepts graphical output from the Chipmunk tools 
   Log and View , so that output from these tools can be
   annotated before inclusion into documents. 
Output compatibility 
   Until can generate two types of Postscript. One output
   type is standard encapsulated Postscript, including all text
   labels; this type of Postscript is compatible with the psfig 
   macros included with dvips . A second output type splits
   the figure into two files: a Postscript file for graphics, and
   a TeX file for labels, including placement information in
   TeX. An included macro package, psmac, overlays these
   two files in a TeX document, allowing the fonts in a
   figure to match the fonts in the main text. 
Edit-extend mode 
   Edit-extend mode is another special feature of Until; it
   lets the user change parameters for graphics objects using
   text input. In this way, graphical and textual manipulation
   can be combined as convenient during figure creation. 

For users with simple illustration requirements, Until can be a
cost-free alternative to commercial tools like Framemaker, when
used in conjunction with TeX. Compatibility with Analog and
View formats, and the special functionality of the psmac TeX
macros, are two other reasons users choose Until. 

Wol and Wolcomp 
---------------

Wol is a graphical environment for IC mask layout. Wolcomp is a
simple cell compiler, embedded in C, for the compilation of leaf
cells generated by Wol into a complete chip. The original
versions of Wol and Wolcomp were written by Carver Mead; the
version included in the Chipmunk package was primarily written
by Massimo Sivilotti, with major contributions by Glenn Gribble.
The name Wol originates from the children's book Winnie the
Pooh. Features of Wol and Wolcomp include: 

Cell editing 
   The Manhattan-geometry leaf-cell editor in Wol has two
   major differences (advantages or disadvantages depending
   on your preferences) compared with Magic: CIF layers are
   drawn directly, and box drawing uses a rubber-banding
   interface. Preferences concerning the mechanics of
   drawing layout is a primary reason users avoid or embrace
   Wol. 

Cell composition 
   Wolcomp, a simple cell compiler embedded in C, supports
   composition of leaf cells drawn by Wol under program
   control, allowing the construction of parameterizable
   macrocell generators. Wol includes an full-featured
   viewer of Wolcomp compositions that also supports
   manual composition; however, manual composition in
   Wol is rudimentary and not suitable for large
   manually-composed designs. 

Netlist extraction 
   Wol includes a netlist extraction function, that produces
   netlist files suitable for net comparison with schematic
   netlists generated by Log. Dense 4600 micron by 6800
   micron chips (lambda = 1 micron), with over 50,000
   transistors, have been successfully extracted with Wol.
   Wol supports post-extraction visualization of netlist
   connectivity. 

Rudimentary DRC 
   The Wol leaf-cell editor and composition viewer supports
   rudimentary post-layout DRC, but cannot DRC entire
   chips. Wol designers typically use Magic (or another tool)
   to do a full-layout DRC before tapeout. Tools exist to
   convert Wol CIF output to a form compatible with Magic,
   and to create flattened CIF for use in Magic DRC
   checking. 

Wol and Wolcomp have relatively few users, due to the
popularity of Magic and the commercial tool LEdit. Some users
do use Wol extensively to create IC designs for fabrication
through MOSIS; I have designed over 20 chips using Wol and
Wolcomp since the Unix port of the Chipmunk tools, using
Magic for auxiliary DRC purposes only. For some users, the
advantages of cell compilation outweigh other issues. 

Supplementary Chipmunk Tools 
----------------------------

In addition to the four major tools (Log, Wol, View, and Until)
the Chipmunk tools include a number of smaller programs. Some
date back to the pre-Unix era, while others have been donated to
the project by new Chipmunk users. These tools include: 


Netcmp 
   Netcmp is a netlist comparison program, that accepts the
   NTK file format for netlists generated by Wol and
   Analog. A different program with a similar name and a
   similar function, Netcomp, is not a part of the Chipmunk
   tools, but is available via anonymous FTP from
   hobiecat.caltech.edu as part of the Netgen package
   (pub/netgen-1.04.tar.Z). 
Mosis 
   Mosis is a program that takes a Wol-generated CIF file as
   input, and creates a mail message to send to the MOS
   Implementation Service to fabricate the chip. The Mosis
   program, as shipped, has fictional names, addresses, and
   account information in its source code; a new user with an
   account with MOSIS should carefully edit these fields to
   reflect their own account information. 
Sctomat 
   Sctomat is a filter program contributed by Michael
   Godfrey, that converts data output from the Log
   visualization tool into files suitable for input to
   MATLAB. 
Mconvert 
   MConvert is a shell scripts for converting a CIF file
   generated by Wol into a format suitable for entry into
   Magic using the :cif read command, using the cif istyle
   lambda=1.0(oldnwell) Magic option. 
Boxify 
   Boxify, contributed by Tor Sverre Lande, is a
   general-purpose CIF filter program. Among its other uses,
   it can convert a wide variety of CIF into a format suitable
   for Wol input. 
Spc-tools 
   These tools, contributed by Harold Levy, support using Log as
   a schematic capture tool for SPICE. These tools work in
   conjunction with the logspc command in Log. 
Xnf-tools 
   These tools, maintained by Ingo Cyliax and hosted at the
   Indiana University, support using Log as a schematic capture
   tool for Xilinx FPGAs. These tools work in conjunction with
   the logntk command in Log. 


The Chipmunk Distribution 
-------------------------

The current distribution of the Chipmunk tools was released on May
25, 1996. It replaces the distribution originally released February 4,
1995. The May 26, 1996 distribution incorporates many changes and
bug fixes contributed by Chipmunk users worldwide. 

The Chipmunk tools now run on a wide variety of platforms.  Exact
software requirements vary by platform, but for most machines an ANSI
c compiler (most typically GCC), X11 (R4, R5, or R6), and an HTML
browser are the only requirements.  These are the currently supported
platforms, with details of platform-specific requirements:

   AmigaOS. Requires ADE X or AmiWin X11. 
   Apple Macintosh, AU/X.
   Apple Macintosh, MachTen
   DEC MIPS-based DECstations 
   DEC Linux/Alpha. OSF/1(Digital Unix) not tested, but may also work. 
   HP Series 300/400, HPUX. 
   HP Series 700, HPUX. The HP-supplied cc, with
   extra-cost ANSI option, will also compile Chipmunk. 
   IBM PC and Compatibles, FreeBSD. 
   IBM PC and Compatibles, Linux/x86
   IBM RS/6000. The IBM xlc compiler is known to
   compile Chipmunk; gcc has not been tested. 
   SGI. Chipmunk known to work on Indigo and Challenge,
   no others were tested. The SGI cc is recommended. 
   Sun SPARC, Solaris 1.X (SunOS 4.X). 
   Sun SPARC, Solaris 2.X (SunOS 5.X). 
   IBM PC and Compatibles, OS/2

   OS/2 Requirements 

   Only the Log system (diglog, analog and loged) is ported. Here are
   the requirements for Log:

     WARP Connect.
 
     The PMX server (The X Window System for OS/2) About
     $140 US, availible from Indelible Blue, 800-776-8284. 

     The icc compiler, and nmake. Not known if gcc will work
     also, please let me know if you try gcc. 

Binary distributions have been built by third-parties for the
following architectures. Contact the authors for additional
information.

IBM PC-Compatibles, MS-DOS. Luigi Rizzo's group at the Universita' di
Pisa, Italy, has been working on an MS-DOS port of analog. Compiled
with djgpp, uses xlibemu and fvwm to provide an interface similar to a
virtual window manager under X with Motif-like widgets. See his home
page for current status; there may be an early-alpha version of a
binary available for evaluation (see "Materiale didattico" section).

Amiga. Marco Gigante (se62@galileo.iet.unipi.it) has created a binary
distribution for the Amiga, which uses the ADE X or AmiWin X
server. These binaries are available on the Aminet server, for several
hardware configurations. Binary filesets ChipMunk*.lha, log*.lha,
view*.lha, until*.lha, wol*.lha, contain the distributions for
Chipmunk, Log, View, Until, and Wol respectively.

Absent from this list are the following popular platforms:

IBM PC-Compatibles, Windows NT No ports are in progress, to my knowledge. 
IBM PC-Compatibles, NextStep. No ports are in progress, to my knowledge. 
Apple Macintosh, MacOS. No ports are in progress, to my knowledge. However,
MachTen does run as a process on top of MacOS. 

The most current version of the documentation is accessible
directly at the World-Wide Web sites that distribute the
Chipmunk tools. You can browse the manual without FTPing the
Web tree.

Binary distributions are not presently offered for the Chipmunk
tools, because the compilation process embeds the full path name
of various library directories into the object code. At the present
time, you must compile most Chipmunk tools at the final disk
location of the object and library files. 

The Chipmunk distribution is offered with the GNU license. In
essence, GNU-licensed software is freely redistributable, but if
you make changes to the source code, and wish to distribute your
changes, you must also distribute the source code of your
modified version, and your modified source must also be freely
redistributable. Check the license agreement included with each
Chipmunk tool for more information.

Earlier versions of the Chipmunk tools are available on
CD-ROM from several vendors. We expect this version to be
included on future CD-ROMs, and will include vendor
information in this section as these products appear. To our
knowledge, no one is offering commercial support services for
the Chipmunk tools. 

How to FTP The Chipmunk System 
------------------------------

All of the files mentioned below should be in the same directory
you found this file.

The Chipmunk tools are available as a set of tar files, compressed
with the GNU gzip program. Practically all users of the
Chipmunk tools will need to get the following two files. 

webdoc1.3.tar.gz 
   This file includes HTML documentation for all of the
   Chipmunk tools, including manuals and installation
   information. All documentation previously contained in
   individual Chipmunk tools has been rewritten HTML and
   is included only in the Webdoc package. 
psys-1.50.tar.gz 
   This file is the source tree for the common libraries of all
   the X-based Chipmunk tools. Most machine-dependent
   aspects of the Chipmunk system are contained in Psys. 

The following files contain the distribution for specific
Chipmunk tools and toolkits. 

log-5.50.tar.gz
   Log is a graphical environment for entering circuit
   schematics, and for analog and digital circuit simulation.
viewbeta.tar.gz
   View is a tool for manipulating and plotting data.
untilbeta.tar.gz
   Until is a graphics editor. 
wolbeta.tar.gz
wolcompbeta.tar.gz
   Wol and Wolcomp are tools for creating integrated circuit
   layout. 
netcmpbeta.tar.gz
   Netcmp is a tool for netlist comparison. 
mosisbeta.tar.gz
   Mosis is a tool for generating mail messages to the MOS
   Implementation Service. 
util1.1.tar.gz
   All other supplementary tools.
examples.tar.gz
   A collection of examples for using all the Chipmunk tools for
   chip design.
Makefile
   A global Makefile to compile all the Chipmunk tools in one
   command.

Once you have retrieved all the necessary files for your site, you
can starting reading the compilation instructions for the
Chipmunk system, located at

webdoc/compile/compile.html

in the Web tree Webdoc.tar.gz described above. If you don't have
a Web browser, read on ...

Chipmunk System Setup 
---------------------

The first part of setting up a Chipmunk system is to choose a place in
your directory tree for the tools. Chipmunk can be installed in a user
directory; you do not need to install it in a public place like 
/usr/local/. Once you've decided on a place, create a directory
called chipmunk. Now move all the Chipmunk tar files to the 
chipmunk directory, and uncompress them using gzip if necessary.

Next, un-tar the files using the tar command, with the options
appropriate for your system. For most Unix systems, the command 

tar -xf file.tar 

untars the file file.tar. Once this is complete, a directory listing
of chipmunk should include the following directories 

webdoc/ psys/ 

as well as some of the following directories, depending on which
applications you pickup up. 

log/ mosis/ netcmp/ until/ util/ view/ wol/
wolcomp/ 

At this point, you should psys/src/README for instructions for
installing psys. After Psys is installed, read the README's for
each of the tools; most are in the first-level directory of
the tool, except for log, which is log/src/README.

Email support for Chipmunk Users 
--------------------------------

If you are having trouble creating a working version of the
Chipmunk tools, please let me know, and I'll try to offer
help. 

Send email to lazzaro@cs.berkeley.edu and
include the following information.

   Complete machine configuration, including machine
   type, OS revision, compilers, and X servers. 

   A listing of the output from the failed compilation
   process, or any messages printed by a Chipmunk
   program or the OS or X when an error occurs. 

   Details of any changes you have made to the
   distribution before this compilation. 
   The effects of following any advice given in the
   compilation instructions. 
			
			







